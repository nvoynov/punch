#!/usr/bin/env ruby

require "bundler/setup"
require "punch"
require "punch/gateways"
require "punch/cli"
include Punch::CLI
include Punch::Gateways

# initialize logger in pwd
LoggerPort.gateway = Logr.new('punch.log')

BANNER = <<~EOF.freeze

  -= Punch v#{Punch::VERSION} Clean Code Puncher =-
  home https://github.com/nvoynov/punch
  also https://github.com/nvoynov/clean

  Start by
    1. gem "punch", "~> #{Punch::VERSION}", git: "https://github.com/nvoynov/punch.git"
    2. $ punch

  Usage
    $ punch new PROJECT
    $ punch init
    $ punch clone clean
    $ punch entity NAME [PARA1 PARA2]
    $ punch service NAME [PARA1 PARA2]
    $ punch preview entity|service NAME [PARA1 PARA2]

  Examples:
    $ punch preview service core/users/create_user name email
    $ punch entity user name email
    $ punch entity user name "email = nil"
    $ punch entity user "answer = \\"42\\"" name "email = nil"
    $ punch entity user name: email:
    $ punch entity user name: "email: nil"
    $ punch entity user name:string "email:string \\"42\\""
    $ punch service create_user name email
    $ punch service core/users/create_user name email

EOF

if ARGV.empty?
  puts BANNER
  exit
end

command = ARGV.shift.downcase
case command
when 'new'   # create new punched
  create(ARGV.shift)
when 'init'  # init punch there
  init
when 'clone' # punch could be cloning some other than Clean in future
  clone(ARGV.shift)
when /(entity|service)/
  punch(ARGV.unshift(command))
when /preview/
  preview(ARGV)
else
  puts "Sorry, didn't get you"
  puts banner
end
